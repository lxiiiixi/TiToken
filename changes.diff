diff --git a/FrontEnd/src/configs/constants.ts b/FrontEnd/src/configs/constants.ts
index 83ef45a..524e1a7 100644
--- a/FrontEnd/src/configs/constants.ts
+++ b/FrontEnd/src/configs/constants.ts
@@ -17,7 +17,7 @@ export const TOKEN_MANAGER_CONTRACT_CONFIT = {
 } as const;
 
 export const TOKEN_CONTRACT_CONFIT = {
-    address: "0xA44473bbff67036d16D2B907e07d6cD49D547EF5" as `0x${string}`,
+    address: "0xb74A068F694EbD9FC5E84413607e19Cf959143e4" as `0x${string}`,
     // address: "0xF19308F923582A6f7c465e5CE7a9Dc1BEC6665B1" as `0x${string}`,
     abi: token,
 } as const;
diff --git a/FrontEnd/src/hooks/useWriteTokenContract.ts b/FrontEnd/src/hooks/useWriteTokenContract.ts
index e041083..926e542 100644
--- a/FrontEnd/src/hooks/useWriteTokenContract.ts
+++ b/FrontEnd/src/hooks/useWriteTokenContract.ts
@@ -1,5 +1,5 @@
 import { useWriteContract, useAccount } from "wagmi";
-import { TOKEN_CONTRACT_CONFIT } from "@/configs/constants";
+import { TOKEN_MANAGER_CONTRACT_CONFIT } from "@/configs/constants";
 import { parseEther } from "viem";
 
 export function useManualDailyUpdate() {
@@ -10,7 +10,7 @@ export function useManualDailyUpdate() {
 
     const manualDailyUpdate = () => {
         writeContract({
-            ...TOKEN_CONTRACT_CONFIT,
+            ...TOKEN_MANAGER_CONTRACT_CONFIT,
             address,
             functionName: "manualDailyUpdate",
         });
@@ -18,6 +18,40 @@ export function useManualDailyUpdate() {
     return { manualDailyUpdate };
 }
 
+export function useStartMint() {
+    const { writeContract } = useWriteContract();
+    const { address } = useAccount();
+    if (!address) return {};
+
+    const startMint = (power: number, length: number, inviter: string, ethCost: bigint) => {
+        writeContract({
+            ...TOKEN_MANAGER_CONTRACT_CONFIT,
+            address,
+            functionName: "startMint",
+            args: [power, length, inviter],
+            value: ethCost,
+        });
+    };
+
+    const startBatchMint = (
+        power: number,
+        length: number,
+        number: number,
+        inviter: string,
+        ethCost: bigint
+    ) => {
+        writeContract({
+            ...TOKEN_MANAGER_CONTRACT_CONFIT,
+            address,
+            functionName: "batchMint",
+            args: [power, length, number, inviter],
+            value: ethCost,
+        });
+    };
+
+    return { startMint, startBatchMint };
+}
+
 /**
  * start a new stake
  * @param amount
@@ -32,7 +66,7 @@ export function useStartStake() {
 
     const startStake = (amount: number, numOfDays: number) => {
         writeContract({
-            ...TOKEN_CONTRACT_CONFIT,
+            ...TOKEN_MANAGER_CONTRACT_CONFIT,
             address,
             functionName: "startStake",
             args: [parseEther(String(amount)), numOfDays],
@@ -49,7 +83,7 @@ export function useDistributeETH() {
 
     const distributeETH = () => {
         writeContract({
-            ...TOKEN_CONTRACT_CONFIT,
+            ...TOKEN_MANAGER_CONTRACT_CONFIT,
             address,
             functionName: "distributeETH",
         });
@@ -65,7 +99,7 @@ export function usePayouts() {
 
     const triggerPayouts = () => {
         writeContract({
-            ...TOKEN_CONTRACT_CONFIT,
+            ...TOKEN_MANAGER_CONTRACT_CONFIT,
             address,
             functionName: "triggerPayouts",
         });
@@ -73,14 +107,14 @@ export function usePayouts() {
 
     const claimUserAvailableETHPayouts = () => {
         writeContract({
-            ...TOKEN_CONTRACT_CONFIT,
+            ...TOKEN_MANAGER_CONTRACT_CONFIT,
             address,
             functionName: "claimUserAvailableETHPayouts",
         });
     };
     const claimUserAvailableETHBurnPool = () => {
         writeContract({
-            ...TOKEN_CONTRACT_CONFIT,
+            ...TOKEN_MANAGER_CONTRACT_CONFIT,
             address,
             functionName: "claimUserAvailableETHBurnPool",
         });
diff --git a/FrontEnd/src/pages/Mine/index.tsx b/FrontEnd/src/pages/Mine/index.tsx
index 6c650f4..352266a 100644
--- a/FrontEnd/src/pages/Mine/index.tsx
+++ b/FrontEnd/src/pages/Mine/index.tsx
@@ -19,6 +19,7 @@ import CardBgWrapper from "@/sections/CardBgWrapper";
 import { Tooltip } from "antd";
 import { QuestionCircleOutlined } from "@ant-design/icons";
 import { formatEther } from "viem";
+import { useStartMint } from "@/hooks/useWriteTokenContract";
 
 function Index() {
     const [minerData, setMinerData] = useState<MinerInputData>({
@@ -27,7 +28,10 @@ function Index() {
         number: 1,
     });
 
+    const inviter = "0x0000000000000000000000000000000000000000";
+
     const openNotification = useNotification();
+    const { startMint, startBatchMint } = useStartMint();
 
     const {
         mintRewardWithBonus,
@@ -83,28 +87,32 @@ function Index() {
         }
         if (type === "single" && address) {
             try {
-                await writeContractAsync({
-                    ...TOKEN_CONTRACT_CONFIT,
-                    address,
-                    functionName: "startMint",
-                    args: [data.power, data.length],
-                    value: ethCost,
-                });
+                if (startMint) startMint(data.power, data.length, inviter, ethCost);
+                // await writeContractAsync({
+                //     ...TOKEN_CONTRACT_CONFIT,
+                //     address,
+                //     functionName: "startMint",
+                //     args: [data.power, data.length, inviter],
+                //     value: ethCost,
+                // });
             } catch (err) {
-                console.log(err);
+                // console.log(err);
+                openNotification("error", "Error", err as string);
             }
         }
         if (type === "batch" && address) {
             try {
-                await writeContractAsync({
-                    ...TOKEN_CONTRACT_CONFIT,
-                    address,
-                    functionName: "batchMint",
-                    args: [data.power, data.length, data.number],
-                    value: ethCost,
-                });
+                if (startBatchMint)
+                    startBatchMint(data.power, data.length, data.number, inviter, ethCost);
+                // await writeContractAsync({
+                //     ...TOKEN_CONTRACT_CONFIT,
+                //     address,
+                //     functionName: "batchMint",
+                //     args: [data.power, data.length, data.number, inviter],
+                //     value: ethCost,
+                // });
             } catch (err) {
-                console.log(err);
+                openNotification("error", "Error", err as string);
             }
         }
     };
diff --git a/FrontEnd/src/pages/Payouts/index.tsx b/FrontEnd/src/pages/Payouts/index.tsx
index 5174848..58fe897 100644
--- a/FrontEnd/src/pages/Payouts/index.tsx
+++ b/FrontEnd/src/pages/Payouts/index.tsx
@@ -76,8 +76,6 @@ function Index() {
             return acc;
         }, {});
 
-        console.log("some change");
-
         return (
             <CardBgWrapper number={`${dayNum}Day` as CardNumber}>
                 {/* <h2>{`${dayNum}-Day Payout Cycles`}</h2>
diff --git a/some-changes.patch b/some-changes.patch
deleted file mode 100644
index b48613e..0000000
--- a/some-changes.patch
+++ /dev/null
@@ -1,13 +0,0 @@
-diff --git a/FrontEnd/src/pages/Payouts/index.tsx b/FrontEnd/src/pages/Payouts/index.tsx
-index 58fe897..5174848 100644
---- a/FrontEnd/src/pages/Payouts/index.tsx
-+++ b/FrontEnd/src/pages/Payouts/index.tsx
-@@ -76,6 +76,8 @@ function Index() {
-             return acc;
-         }, {});
- 
-+        console.log("some change");
-+
-         return (
-             <CardBgWrapper number={`${dayNum}Day` as CardNumber}>
-                 {/* <h2>{`${dayNum}-Day Payout Cycles`}</h2>
